{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/imagesApi.js","components/App.js","index.js"],"names":["Searchbar","state","inputValue","handleSubmit","e","preventDefault","props","onSubmit","setState","handleChange","target","value","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","smallImageURL","tags","largeImageURL","onImageClick","src","alt","onClick","ImageGallery","images","map","id","webformatURL","Button","clickOnBtn","Modal","handleKeyDown","console","log","code","onClose","overlayClick","currentTarget","trigger","loading","window","addEventListener","removeEventListener","pixabayKey","searchQuery","page","fetch","then","res","json","data","hits","App","fetchImages","imagesApi","prevState","scroll","catch","error","finally","handleBarSubmit","query","showModal","scrollTo","top","document","documentElement","scrollHeight","behavior","toggleModal","openModal","prevProps","color","height","width","timeout","length","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.ed8cb561.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Searchbar.css';\r\n\r\nexport default class Searchbar extends Component {\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  }\r\n  \r\n  state = {inputValue: ''};\r\n  \r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({inputValue: ''});\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({inputValue: e.target.value})\r\n  }\r\n\r\n  render () {\r\n    const {inputValue} = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={inputValue}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ImageGallery.css';\r\n\r\nconst ImageGalleryItem = ({smallImageURL, tags, largeImageURL, onImageClick}) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img src={smallImageURL} alt={tags} className=\"ImageGalleryItem-image\" onClick={() => onImageClick(largeImageURL)}/>\r\n    </li>\r\n  )\r\n}\r\n\r\nconst ImageGallery = ({images, onImageClick}) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({id, largeImageURL, webformatURL, tags}) => (\r\n        <ImageGalleryItem key={id} smallImageURL={webformatURL} tags={tags} largeImageURL={largeImageURL} onImageClick={onImageClick}/>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  smallImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  onImageClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = ({clickOnBtn}) => {\r\n    return (\r\n        <button type=\"button\" onClick={clickOnBtn} className=\"Button\">Load More</button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    clickOnBtn: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Modal.css';\r\n\r\nexport default class Modal extends Component {\r\n\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n  }\r\n\r\n  componentDidMount() {\r\n      window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n      console.log(e);\r\n      if (e.code === 'Escape') {\r\n          this.props.onClose();\r\n      }\r\n  }\r\n\r\n  overlayClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  trigger = () => {\r\n    this.setState({loading: false})\r\n  }\r\n\r\n  render () {\r\n    const {largeImageURL} = this.props;\r\n      return (\r\n        <div className=\"Overlay\" onClick={this.overlayClick}>\r\n          <div className=\"Modal\">\r\n            <img src={largeImageURL} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\n","\r\nconst pixabayKey = '18755055-2b7ea91b0bc0758970d9c18f6';\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page=1) => {\r\n\r\n    return fetch(`http://pixabay.com/api/?q=${searchQuery}&key=${pixabayKey}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`)\r\n            .then(res => res.json())\r\n            .then(data => data.hits);\r\n\r\n}\r\n// eslint-disable-next-line\r\nexport default {fetchImagesWithQuery};","import React, { Component } from 'react';\n\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Loader from \"react-loader-spinner\";\nimport Modal from './Modal/Modal';\n\nimport imagesApi from '../services/imagesApi';\n\nclass App extends Component {\n\n  state = {\n    images: [],\n    searchQuery: '',\n    page: 1,\n    loading: false,\n    largeImageURL: '',\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = () => {\n    const {searchQuery, page} = this.state;\n    this.setState({loading: true})\n    imagesApi\n    .fetchImagesWithQuery(searchQuery, page)\n    .then(images => this.setState(prevState => ({\n      images: [...prevState.images, ...images],\n      page: prevState.page + 1,\n    })))\n    .then(this.scroll)\n    .catch(error => this.setState({error}))\n    .finally(() => this.setState({loading: false})) \n  }\n\n  handleBarSubmit = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      images: [],\n      showModal: false,\n    })\n  }\n\n  scroll = () => {\n    return window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  toggleModal = () => {\n    this.setState(state => ({showModal: !state.showModal}));\n  }\n\n  openModal = (largeImageURL) => {\n    this.setState({showModal: true, largeImageURL: largeImageURL})\n  }\n\n  render () {\n    const {images, loading, showModal, largeImageURL} = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleBarSubmit} />\n        <ImageGallery images={images} onImageClick={this.openModal}/>\n        {loading && <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} timeout={3000} />}\n        {images.length !==0 && !loading && <Button clickOnBtn={this.fetchImages}/>}\n        {showModal && \n          <Modal onClose={this.toggleModal} largeImageURL={largeImageURL}/>}\n      </div>\n    )\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './styles.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}